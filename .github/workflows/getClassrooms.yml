name: get-classrooms
on: [push]
  # schedule:
  #   - cron: '30 * * * *'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - id: get-classrooms
        uses: maku693/action-puppeteer-script@v0
        with:
          script: const page=await browser.newPage();await page.goto('https://www.jiritsu-red.jp/contact/');const list_pref=await page.$$eval("select#schoolprefecture > optgroup > option",options=>options.map(option=>option.textContent));const master={};let cityOptions;let classroomOptions;for(i=0;i<list_pref.length;i++){await page.evaluate((list_pref,i)=>{const selectPrefBox=document.getElementById("schoolprefecture");Array.from(selectPrefBox.options).forEach(e=>{if(e.textContent===list_pref[i]){selectPrefBox.selectedIndex=e.index;selectPrefBox.dispatchEvent(new Event("change",{bubbles:!0}))}})},list_pref,i);cityOptions=await page.$$eval("select#schoolcity > option",options=>options.map(option=>option.textContent));master[list_pref[i]]=cityOptions.shift();for(j=0;j<master[list_pref[i]].length;j++){const list_city=master[list_pref[i]] await page.evaluate((list_city,j)=>{const selectCityBox=document.getElementById("schoolcity");Array.from(selectCityBox.options).forEach(e=>{if(e.textContent===list_city[j]){selectCityBox.selectedIndex=e.index;selectCityBox.dispatchEvent(new Event("change",{bubbles:!0}))}})},list_city,j);classroomOptions=await page.$$eval("select#classroom > option",options=>options.map(option=>option.textContent));master[list_pref[i][j]]=classroomOptions.shift()}} return master
      - run: echo '${{ steps.get-classrooms.outputs.result }}'
      - run: echo 'var classroomOptions = ${{ steps.get-classrooms.outputs.result }}' > classrooms.js
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./
